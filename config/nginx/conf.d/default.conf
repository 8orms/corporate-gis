upstream geoserver-vector {
    server geoserver-vector:8080;
    keepalive 32;
}

upstream geoserver-ecw {
    server geoserver-ecw:8080;
    keepalive 32;
}

server {
    listen 80;
    server_name localhost;

    # Increase buffer sizes and timeouts for better performance with GeoServer
    client_max_body_size 100M;
    client_body_buffer_size 256k;
    proxy_connect_timeout 90s;
    proxy_send_timeout 90s;
    proxy_read_timeout 90s;
    proxy_buffers 32 4k;
    proxy_buffer_size 8k;
    proxy_busy_buffers_size 64k;

    # Enable gzip compression
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Error page for 404
    error_page 404 /404.html;

    # Static content
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ =404;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Main page
    location = / {
        root /usr/share/nginx/html;
        index index.html;
    }

    # 404 page
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    # GeoServer selection page
    location = /geoserver/ {
        root /usr/share/nginx/html;
        index index.html;
        add_header Cache-Control "no-cache";
    }

    # Redirect from /geoserver/web/ to GeoServer selection page
    location = /geoserver/web/ {
        return 302 $scheme://$host/geoserver/;
    }

    # Handle /geoserver/web/?0 query parameter
    location = /geoserver/web {
        if ($args ~ "0") {
            return 302 $scheme://$host/geoserver/;
        }
        return 302 $scheme://$host/geoserver/;
    }

    # Vector GeoServer - web interface
    location /geoserver/vector/web/ {
        proxy_pass http://geoserver-vector/geoserver/web/;
        proxy_redirect http://localhost:8080/geoserver/ /geoserver/vector/;
        proxy_redirect http://localhost:8080/geoserver/web/ /geoserver/vector/web/;
        proxy_redirect default off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        # No caching for admin interface
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires off;
    }

    # Vector GeoServer - API and services
    location /geoserver/vector/ {
        proxy_pass http://geoserver-vector/geoserver/;
        proxy_redirect default off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
    }
    
    # Handle Vector GeoServer authentication
    location = /geoserver/vector/j_spring_security_check {
        proxy_pass http://geoserver-vector/geoserver/j_spring_security_check;
        proxy_redirect http://localhost:8080/geoserver/ /geoserver/vector/;
        proxy_redirect http://localhost:8080/geoserver/web/ /geoserver/vector/web/;
        proxy_redirect default off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
    }
    
    # Handle direct GeoServer authentication when path prefix is missing
    location = /geoserver/j_spring_security_check {
        set $target_geoserver "geoserver-ecw";  # Default to ECW
        set $instance_prefix "";
        
        # Check referrer to determine which GeoServer instance to use
        if ($http_referer ~ "/geoserver/vector/") {
            set $target_geoserver "geoserver-vector";
            set $instance_prefix "vector";
        }
        
        if ($http_referer ~ "/geoserver/ecw/") {
            set $target_geoserver "geoserver-ecw";
            set $instance_prefix "ecw";
        }
        
        proxy_pass http://$target_geoserver/geoserver/j_spring_security_check;
        proxy_redirect http://localhost:8080/geoserver/ /geoserver/$instance_prefix/;
        proxy_redirect http://localhost:8080/geoserver/web/ /geoserver/$instance_prefix/web/;
        proxy_redirect /geoserver/web/ /geoserver/$instance_prefix/web/;
        proxy_redirect /geoserver/ /geoserver/$instance_prefix/;
        proxy_redirect default off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
    }
    
    # Handle GeoServer logout
    location = /geoserver/j_spring_security_logout {
        set $target_geoserver "geoserver-ecw";  # Default to ECW
        
        # Check referrer to determine which GeoServer instance to use
        if ($http_referer ~ "/geoserver/vector/") {
            set $target_geoserver "geoserver-vector";
        }
        
        proxy_pass http://$target_geoserver/geoserver/j_spring_security_logout;
        proxy_redirect default off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
    }
    
    # Handle GeoServer logout for Vector
    location = /geoserver/vector/j_spring_security_logout {
        proxy_pass http://geoserver-vector/geoserver/j_spring_security_logout;
        proxy_redirect default off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
    }
    
    # Handle GeoServer logout for ECW
    location = /geoserver/ecw/j_spring_security_logout {
        proxy_pass http://geoserver-ecw/geoserver/j_spring_security_logout;
        proxy_redirect default off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
    }
    
    # Vector GeoServer - WMS GetMap requests with caching
    location /geoserver/vector/wms {
        proxy_pass http://geoserver-vector/geoserver/wms;
        proxy_redirect default off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        
        # Enable caching for GetMap requests
        proxy_cache geoserver_cache;
        proxy_cache_key $request_uri;
        proxy_cache_valid 200 302 10m;
        proxy_cache_bypass $arg_nocache;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # ECW GeoServer - web interface
    location /geoserver/ecw/web/ {
        proxy_pass http://geoserver-ecw/geoserver/web/;
        
        # Use regex-based redirects to handle all cases
        proxy_redirect ~^http://[^/]+/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect ~^/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect default off;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        
        # No caching for admin interface
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires off;
        
        # Set custom header to identify ECW instance
        proxy_set_header X-GeoServer-Instance "ecw";
    }

    # ECW GeoServer - API and services
    location /geoserver/ecw/ {
        proxy_pass http://geoserver-ecw/geoserver/;
        
        # Use regex-based redirects to handle all cases
        proxy_redirect ~^http://[^/]+/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect ~^/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect default off;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        
        # Set custom header to identify ECW instance
        proxy_set_header X-GeoServer-Instance "ecw";
    }
    
    # Handle ECW GeoServer authentication
    location = /geoserver/ecw/j_spring_security_check {
        proxy_pass http://geoserver-ecw/geoserver/j_spring_security_check;
        
        # Fix redirects to maintain /geoserver/ecw/ prefix
        proxy_redirect ~^http://[^/]+/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect ~^/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect default off;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        
        # Set custom header to track login attempt source
        proxy_set_header X-GeoServer-Instance "ecw";
    }
    
    # ECW GeoServer - WMS GetMap requests with caching
    location /geoserver/ecw/wms {
        proxy_pass http://geoserver-ecw/geoserver/wms;
        proxy_redirect default off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        
        # Enable caching for GetMap requests
        proxy_cache geoserver_cache;
        proxy_cache_key $request_uri;
        proxy_cache_valid 200 302 10m;
        proxy_cache_bypass $arg_nocache;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Health check for GeoServer Vector
    location = /geoserver/vector/health {
        proxy_pass http://geoserver-vector/geoserver/web/;
        proxy_intercept_errors on;
        error_page 301 302 307 = @vector_health_redirect;
        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 = @vector_health_error;
    }

    location @vector_health_redirect {
        return 200 "GeoServer Vector is up";
    }

    location @vector_health_error {
        return 503 "GeoServer Vector is down";
    }

    # Health check for GeoServer ECW
    location = /geoserver/ecw/health {
        proxy_pass http://geoserver-ecw/geoserver/web/;
        proxy_intercept_errors on;
        error_page 301 302 307 = @ecw_health_redirect;
        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 = @ecw_health_error;
    }

    location @ecw_health_redirect {
        return 200 "GeoServer ECW is up";
    }

    location @ecw_health_error {
        return 503 "GeoServer ECW is down";
    }

    # Main health check for the server
    location = /health {
        return 200 "NGINX is running";
    }

    # Handle GeoServer login page redirects
    location ~ ^/geoserver/web/wicket/bookmarkable/org\.geoserver\.web\.GeoServerLoginPage {
        # Default to GeoServer selection page
        set $redirect_path "/geoserver/";
        
        # Use referrer to determine correct redirect
        if ($http_referer ~ "/geoserver/vector/") {
            set $redirect_path "/geoserver/vector/web/";
        }
        
        if ($http_referer ~ "/geoserver/ecw/") {
            set $redirect_path "/geoserver/ecw/web/";
        }
        
        return 302 $scheme://$host$redirect_path;
    }

    # Handle workspace-specific WMS requests for ECW GeoServer
    location ~ ^/geoserver/(?!vector|ecw)([^/]+)/wms {
        # Simple and direct approach to ensure proper query parameter handling
        rewrite ^/geoserver/([^/]+)/wms(.*)$ /geoserver/$1/wms$2 break;
        proxy_pass http://geoserver-ecw;
        
        # Use regex-based redirects to handle all cases
        proxy_redirect ~^http://[^/]+/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect ~^/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect default off;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        
        # Enable caching for GetMap requests
        proxy_cache geoserver_cache;
        proxy_cache_key $request_uri;
        proxy_cache_valid 200 302 10m;
        proxy_cache_bypass $arg_nocache;
        add_header X-Cache-Status $upstream_cache_status;
        
        # Set custom header to identify ECW instance
        proxy_set_header X-GeoServer-Instance "ecw";
    }

    # Handle workspace-specific WFS requests for ECW GeoServer
    location ~ ^/geoserver/(?!vector|ecw)([^/]+)/wfs {
        # Simple and direct approach to ensure proper query parameter handling
        rewrite ^/geoserver/([^/]+)/wfs(.*)$ /geoserver/$1/wfs$2 break;
        proxy_pass http://geoserver-ecw;
        
        # Use regex-based redirects to handle all cases
        proxy_redirect ~^http://[^/]+/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect ~^/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect default off;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        
        # Set custom header to identify ECW instance
        proxy_set_header X-GeoServer-Instance "ecw";
    }
    
    # Handle workspace-specific WCS requests for ECW GeoServer
    location ~ ^/geoserver/(?!vector|ecw)([^/]+)/wcs {
        # Simple and direct approach to ensure proper query parameter handling
        rewrite ^/geoserver/([^/]+)/wcs(.*)$ /geoserver/$1/wcs$2 break;
        proxy_pass http://geoserver-ecw;
        
        # Use regex-based redirects to handle all cases
        proxy_redirect ~^http://[^/]+/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect ~^/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect default off;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        
        # Enable caching for GetCoverage requests
        proxy_cache geoserver_cache;
        proxy_cache_key $request_uri;
        proxy_cache_valid 200 302 10m;
        proxy_cache_bypass $arg_nocache;
        add_header X-Cache-Status $upstream_cache_status;
        
        # Set custom header to identify ECW instance
        proxy_set_header X-GeoServer-Instance "ecw";
    }
    
    # Handle any other workspace-specific requests for ECW GeoServer
    location ~ ^/geoserver/(?!vector|ecw)([^/]+)/ {
        # Simple and direct approach to ensure proper query parameter handling
        rewrite ^/geoserver/([^/]+)/(.*)$ /geoserver/$1/$2 break;
        proxy_pass http://geoserver-ecw;
        
        # Use regex-based redirects to handle all cases
        proxy_redirect ~^http://[^/]+/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect ~^/geoserver/(.*) /geoserver/ecw/$1;
        proxy_redirect default off;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        
        # Set custom header to identify ECW instance
        proxy_set_header X-GeoServer-Instance "ecw";
    }
}
